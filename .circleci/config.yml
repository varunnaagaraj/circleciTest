version: 2
jobs:
  node:
    working_directory: ~/circleCITest
    docker:
      - image: circleci/node:12
    steps:
      - checkout

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/circleCITest
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android:
    # working_directory: ~/circleCITest/android
    # docker:
    #   - image: circleci/android:api-27-node8-alpha
    # steps:
    #   - checkout:
    #       path: ~/circleCITest

    #   - run:
    #       command: ls /home/circleci/circleCITest/android

    #   - attach_workspace:
    #       at: ~/circleCITest

    #   - restore_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

    #   - run: npx react-native run-android

    #   - save_cache:
    #       key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
    #       paths:
    #         - vendor/bundle

    #   - run:
    #       name: fastlane tests
    #       command: |
    #         mkdir -p test-results/fastlane
    #         bundle exec fastlane test
    #         mv fastlane/report.xml test-results/fastlane
    #   - store_test_results:
    #       path: test-results

    #   - store_artifacts:
    #       path: test-results
    working_directory: ~/circleCITest/android
    docker:
      - image: circleci/android:api-25-alpha
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      # - run:
      #     name: Change working directory
      #     command: cd android
      # - run:
      #     name: present working directory
      #     command: pwd
      # - run:
      #     name: list working directory
      #     command: ls -l
      # - run:
      #     name: Change working directory
      #     command: cd android
      - run:
          name: present working directory
          command: pwd
      - run:
          name: list working directory
          command: cd android/app && ls -l
      - run:
          name: list working directory
          command: cd ./app && ls -l
      - run:
          name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
          command: cd ./app && sudo chmod +x ./gradlew
      - run:
          name: Build apk
          command: cd ./app && ./gradlew build
      - save_cache:
          paths:
            - ./.gradle
          key: jars-{{ checksum "build.gradle.kts" }}-{{ checksum  "app/build.gradle.kts" }}
      - store_artifacts:
          path: ./app/build/outputs/apk/
          destination: apks/
      # - run:
      #     name: Compress app for storage
      #     command: zip -r app.zip ./android/app/build/outputs/apk/debug/app-debug.apk

  ios:
    macos:
      xcode: "9.0"
    working_directory: ~/circleCITest

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: yarn install

      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: ios/test-results

      - store_artifacts:
          path: ios/test-results

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android:
          requires:
            - node
      - ios:
          requires:
            - node
